const router = require("express").Router();
let feedback = require("../models/feedback");

router.route("/add").post((req,res)=>{
    const customerName = req.body.customerName;
    const email = req.body.email;
    const comment = req.body.comment;
    const date = req.body.date ? new Date(req.body.date) : new Date();

    const newfeedback = new feedback({
        customerName,
        email,
        comment,
        date
    })

    newfeedback.save().then(()=>{
        res.json("Feedback Added")
    }).catch((err)=>{
        console.log(err);
    })
})

router.route("/").get((req, res) => {
    feedback.find().then((feedbacks) => {
        const formattedFeedbacks = feedbacks.map(fb => ({
            ...fb._doc,  
            date: new Date(fb.date).toLocaleString("en-US", { timeZone: "Asia/Colombo" }) // Convert to Sri Lanka time - [Generated by ChatGPT ðŸš€]  
        }));

        res.json(formattedFeedbacks);
    }).catch((err) => console.log(err));
});

router.route("/update/:id").put(async(req,res)=>{
    let userID = req.params.id;
    const {customerName , email , comment , date} = req.body;

    const updateFeedback = {
        customerName,
        email,
        comment,
        date: new Date() // Updates date to current timestamp
    }

    const update = await feedback.findByIdAndUpdate(userID, updateFeedback)
    .then(()=>{
        res.status(200).send({status : "User Updated"})
    }).catch((err)=>{
        res.status(500).send({status: "Error with Updating data", error: err.message});
    })
})

router.route("/delete/:id").delete(async(req,res)=>{
    let userID = req.params.id;

    await feedback.findByIdAndDelete(userID).then(()=>{
        res.status(200).send({status: "user deleted"});
    }).catch((err)=>{
        console.log(err.message);
        res.status(500).send({status: "Error with delete user", error: err.message});
    })
})

router.route("/get/:id").get(async(req,res)=>{
    let userID = req.params.id;

    const user = await feedback.findById(userID)
    .then((feedback)=>{
        res.status(200).send({status: "User Fetched", feedback})
    }).catch(()=>{})
    console.log(err.message);
    res.status(500).send({status: "Error with get user", error: err.message})
})

module.exports = router;